{"body":"### Introduction\r\n\r\n`webshell` is a simple framework for quickly getting started with new\r\nwebapps in Go that can be configured for TLS or insecure operation.\r\n\r\n```go\r\n// example/example.go: very quick example program\r\npackage main\r\n\r\nimport (\r\n        \"github.com/gokyle/webshell\"\r\n        \"log\"\r\n        \"net/http\"\r\n)\r\n\r\nfunc hello_world(w http.ResponseWriter, r *http.Request) {\r\n        w.Write([]byte(\"hello, \" + r.RemoteAddr))\r\n}\r\n\r\nfunc main() {\r\n        // create the app\r\n        app := webshell.NewApp(\"example app\", \"127.0.0.1\", \"8080\")\r\n        // add an endpoint to our server\r\n        app.AddRoute(\"/\", hello_world)\r\n        // start a HTTP-only web server\r\n        log.Fatal(app.Serve())\r\n}\r\n```\r\n\r\n### Creating a New WebApp\r\n\r\nThere are two ways to create a new webapp:\r\n\r\n* `NewApp(name, host, port) *WebApp` creates an HTTP app\r\n* `NewTLSApp(name, host, port, keypath, certpath) *WebApp` creates a new TLS\r\napp.\r\n\r\nThe returned app can be started with `Serve()`; an app can be queried for its\r\nname, host and port with the `Name()`, `Host()`, and `Port()` methods. It can\r\nalso be queried to determine if it is a TLS app using the `IsTLS()` method.\r\n\r\n### Adding Routes\r\n\r\nWebApps have three methods for adding new routes:\r\n\r\n* `AddRoute(route, handler)` will add a new route, panicking if the route\r\ncouldn't be added.\r\n* `AddConditionalRoute(condition, route, path)` adds the route if condition\r\nis true; it, too, will panic on error.\r\n* `StaticRoute(route, path)` runs a basic file server on the directory, i.e.\r\nfor static assets.\r\n\r\n### Examples\r\nContained in the `examples` subdirectory:\r\n* `basic`: bare bones example\r\n* `templates`: templating example\r\n* `static`: demonstrates the use of the static serving functions\r\n\r\nEach example should be run from its respective directory, as some use\r\nrelative paths in their routes.\r\n\r\n### License\r\n\r\n`webshell` is licensed under an ISC license. The `LICENSE` file contains\r\nthe full text of the license.\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","name":"webshell","tagline":"A shell for new Go webapps"}